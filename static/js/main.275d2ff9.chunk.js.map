{"version":3,"sources":["actions/index.js","component/control.js","component/profile.js","component/results.js","App.js","reducers/controlsReducer.js","reducers/resultsReducer.js","reducers/filterReducer.js","store/reducers.js","store/configureStore.js","index.js"],"names":["setSelectedItem","selectedItem","controlName","type","payload","getAxios","url","axiosRequestConfig","axios","method","callTime","params","then","response","catch","console","log","interceptors","request","use","Control","controlId","e","this","props","onClickItem","items","_","isEmpty","data","length","_this","map","item","attributes","name","key","id","className","Selected","onClick","onSelectItem","bind","style","width","renderItems","controlsData","Component","Profile","profileData","imageUrl","subspecialties","join","padding","marginTop","maxWidth","height","float","src","alt","Results","resultsData","App","selControlName","filterData","filter","toLowerCase","indexOf","filteredResult","getFilteredResult","connect","state","dispatch","bindActionCreators","Controls","parsedData","action","update","$set","currItem","currStateData","cloneDeep","prevSelIndex","findIndex","newSelIndex","Filter","allReducer","combineSectionReducers","persistedState","logger","createLogger","configureStore","applyMiddlewareObj","applyMiddleware","thunk","promise","sequenceAction","store","createStore","allReducers","Date","ReactDOM","render","StrictMode","configurationStore","document","getElementById"],"mappings":"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","file":"static/js/main.275d2ff9.chunk.js","sourcesContent":["\r\nimport axios from 'axios';\r\n// import _ from 'lodash';\r\n\r\nexport const getControls = () => {\r\n    let params = { callTime: new Date() };\r\n\r\n    const url = 'https://api.inquickerstaging.com/v3/winter.inquickerstaging.com/services';\r\n\r\n    const request = getAxios(url, { params: { params } });\r\n    return {\r\n        type: 'GET_CONTROLS',\r\n        payload: request\r\n    }\r\n};\r\n\r\nexport const getResults = () => {\r\n    let params = { callTime: new Date() };\r\n\r\n    const url = 'https://api.inquickerstaging.com/v3/winter.inquickerstaging.com/providers?include=locations%2Cschedules.location&page%5Bnumber%5D=1&page%5Bsize%5D=10';\r\n\r\n    const request = getAxios(url, { params: { params } });\r\n    return {\r\n        type: 'GET_RESULTS',\r\n        payload: request\r\n    }\r\n};\r\n\r\nexport const setSelectedItem = (selectedItem, controlName) => {\r\n    return {\r\n        type: 'SET_SELECTED',\r\n        payload: { selectedItem, controlName }\r\n    }\r\n};\r\n\r\naxios.interceptors.request.use(request => {\r\n    //Use code for logger\r\n    return request;\r\n});\r\n\r\naxios.interceptors.response.use(response => {\r\n    //Use code for logger\r\n    return response;\r\n});\r\n\r\nfunction getAxios(url, axiosRequestConfig) {\r\n    var resp = axios({\r\n        method: 'get',\r\n        url: url,\r\n        //headers: axiosRequestConfig.headers,\r\n        callTime: axiosRequestConfig.params.callTime\r\n    })\r\n        .then(function (response) {\r\n            return response;\r\n        })\r\n        .catch(function (response) {\r\n            console.log(response);\r\n        });\r\n    return resp;\r\n};\r\n\r\n","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\nimport '../App.css';\r\n\r\nclass Control extends Component {\r\n    onSelectItem(controlId, controlName, e) {\r\n        this.props.onClickItem(controlId, controlName);\r\n    }\r\n\r\n    renderItems(items) {\r\n        if (_.isEmpty(items) || _.isEmpty(items.data) || items.data.length <= 0) { return '' }\r\n        const _this = this;\r\n        return (items.data).map((item => {\r\n            const controlName = item?.attributes?.name;\r\n            return (\r\n                <li key={item.id} className={\"controls-items\" + (item.Selected ? \" active\" : \"\")} onClick={_this.onSelectItem.bind(this, item.id, controlName)}>\r\n                    {controlName}\r\n                </li>\r\n            );\r\n        }\r\n        ))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ width: '100%' }}>\r\n                <h3>Controls</h3>\r\n                <ul className=\"container\">\r\n                    {this.renderItems(this.props.controlsData)}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Control;","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\nimport '../App.css';\r\n\r\nclass Profile extends Component {\r\n    render() {\r\n        const profileData = this.props.profileData;\r\n        const imageUrl = profileData?.attributes['card-image'];\r\n        if (_.isEmpty(imageUrl)) return '';\r\n\r\n        const subspecialties = profileData?.attributes?.subspecialties.join(', ')\r\n        return (\r\n            <div style={{ padding: '10px', marginTop: '10px', width: '100%', maxWidth: 500, height: '120px' }}>\r\n                <div style={{ float: 'left', width: '20%' }}>\r\n                    <img className=\"profile-image\" src={imageUrl} alt={profileData?.attributes?.name}></img>\r\n                </div>\r\n                <div style={{ float: 'left', width: '80%' }}>\r\n                    <span className=\"profile-name\">{profileData?.attributes?.name}</span>\r\n                    <br />\r\n                    <span className=\"profile-subspcl\">{subspecialties}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profile;","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\nimport '../App.css';\r\nimport Profile from './profile';\r\n\r\nclass Results extends Component {\r\n\r\n    renderItems(items) {\r\n        if (_.isEmpty(items) || _.isEmpty(items) || items.length <= 0) { return '' }\r\n        return items.map((item => {\r\n            return (\r\n                <li key={item.id} className=\"results-items\">\r\n                    <Profile profileData={item} />\r\n                </li>\r\n            );\r\n            }\r\n        ))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ marginTop: '10px', width: '100%', height: '100%' }}>\r\n                <h3>Results</h3>\r\n                <Profile />\r\n                <ul className=\"container\">\r\n                    {this.renderItems(this.props.resultsData)}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Results;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setSelectedItem } from './actions/index';\nimport { bindActionCreators } from 'redux';\nimport './App.css';\nimport Controls from './component/control'\nimport Results from './component/results'\nimport _ from 'lodash';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.onClickItem = this.onClickItem.bind(this);\n  }\n\n  onClickItem(selectedItem, controlName, e) {\n    this.props.setSelectedItem(selectedItem, controlName);\n  }\n\n  getFilteredResult() {\n    const resultsData = this.props.resultsData;\n    const selControlName = this.props.filterData?.controlName;\n    if (_.isEmpty(resultsData)) return [];\n\n    return  _.filter(resultsData.data, function (data) {\n      const listItems = data?.attributes?.subspecialties;\n      return listItems.join('').toLowerCase().indexOf(selControlName.toLowerCase()) > -1;\n    });\n  }\n  \n\n  render() {\n    const filteredResult = this.getFilteredResult();\n    return (\n      <div className=\"App\">\n        <Controls controlsData={this.props.controlsData} onClickItem={this.onClickItem} />\n        <hr className=\"separator\"></hr>\n        <Results resultsData={filteredResult} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  controlsData: state.controlsData,\n  resultsData: state.resultsData,\n  filterData: state.filterData\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ setSelectedItem }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import update from 'immutability-helper';\r\nimport _ from 'lodash';\r\n\r\nconst Controls = (state = [], action) => {\r\n    var parsedData;\r\n\r\n    switch (action.type) {\r\n        case 'GET_CONTROLS':\r\n            parsedData = action.payload?.data;\r\n            return update(state, { $set: parsedData });\r\n        case 'SET_SELECTED':\r\n            const currItem = action.payload?.selectedItem;\r\n            let currStateData = _.cloneDeep(state.data);\r\n            //Remove previous selection\r\n            const prevSelIndex = _.findIndex(currStateData, { 'Selected': true });\r\n            if (prevSelIndex > -1) {\r\n                currStateData = update(currStateData, {\r\n                    [prevSelIndex]: {\r\n                        Selected: { $set: false }\r\n                    }\r\n                });\r\n            }\r\n            //Set new selection\r\n            const newSelIndex = _.findIndex(currStateData, { 'id': currItem });\r\n            if (newSelIndex > -1) {\r\n                currStateData = update(currStateData, {\r\n                    [newSelIndex]: {\r\n                        Selected: { $set: true }\r\n                    }\r\n                });\r\n            }\r\n\r\n            return update(state, { data: { $set: currStateData } });\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default Controls;","import update from 'immutability-helper';\r\n\r\nconst Results = (state = [], action) => {\r\n    var parsedData;\r\n\r\n    switch (action.type) {\r\n        case 'GET_RESULTS':\r\n            parsedData = action.payload?.data;\r\n            return update(state, { $set: parsedData });\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default Results;","import update from 'immutability-helper';\r\n\r\nconst Filter = (state = [], action) => {\r\n    var parsedData;\r\n\r\n    switch (action.type) {\r\n        case 'SET_SELECTED':\r\n            parsedData = action.payload ? action.payload : { selectedItem: '', controlName: '' };\r\n            return update(state, { $set: parsedData });\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default Filter;","import combineSectionReducers from 'combine-section-reducers';\r\nimport controlsData from '../reducers/controlsReducer';\r\nimport resultsData from '../reducers/resultsReducer';\r\nimport filterData from '../reducers/filterReducer';\r\n\r\nconst allReducer =\r\n    combineSectionReducers({\r\n        controlsData: controlsData,\r\n        resultsData: resultsData,\r\n        filterData: filterData\r\n    })\r\n\r\n\r\nexport default allReducer;\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport promise from 'redux-promise';\r\nimport sequenceAction from 'redux-sequence-action';\r\nimport thunk from 'redux-thunk';\r\nimport { getControls, getResults } from '../actions/index';\r\nimport allReducers from './reducers';\r\n\r\nconst persistedState = {\r\n    controlsData: {},\r\n    resultsData: {},\r\n    filterData: { selectedItem: '', controlName: '' }\r\n}\r\n\r\nconst logger = createLogger({\r\n    // ...options\r\n});\r\n\r\nconst configureStore = () => {\r\n    //var applyMiddlewareObj = applyMiddleware(thunk, promise, sequenceAction);\r\n    var applyMiddlewareObj = applyMiddleware(thunk, promise, logger, sequenceAction);\r\n    const store =\r\n        createStore(\r\n            allReducers,\r\n            persistedState,\r\n            applyMiddlewareObj\r\n        );\r\n\r\n    //Load data\r\n    store.dispatch(getControls());\r\n    store.dispatch(getResults());\r\n    return store;\r\n};\r\n\r\nexport default configureStore;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport configurationStore from './store/configureStore';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App store={configurationStore()}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}